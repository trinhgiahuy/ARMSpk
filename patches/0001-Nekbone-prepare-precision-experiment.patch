From 6eebe9d21f62f9ca90064819891a11d2e1063d4c Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 15:35:10 +0900
Subject: [PATCH 1/1] Nekbone: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 src/driver.f           | 24 ++++++++++++++++++++++++
 src/makefile.template  | 17 +++++++++--------
 src/makenek.inc        |  2 +-
 src/ssc.c              | 14 ++++++++++++++
 test/nek_mgrid/makenek |  2 +-
 5 files changed, 49 insertions(+), 10 deletions(-)
 create mode 100644 src/ssc.c

diff --git a/src/driver.f b/src/driver.f
index 75c2dca..764e5f3 100755
--- a/src/driver.f
+++ b/src/driver.f
@@ -1,6 +1,18 @@
 c-----------------------------------------------------------------------
       program nekbone
       
+      use, intrinsic :: iso_c_binding
+      interface
+      integer(4) function SSC_MARK_START ( i ) bind ( c )
+      integer(4) :: i
+      !!!DEC$ ATTRIBUTES C:: SSC_MARK_START
+      end function
+      integer(4) function SSC_MARK_STOP ( j ) bind ( c )
+      integer(4) :: j
+      !!!DEC$ ATTRIBUTES C:: SSC_MARK_STOP
+      end function
+      end interface
+
       include 'SIZE'
       include 'TOTAL'
       include 'SEMHAT'
@@ -21,8 +33,11 @@ c-----------------------------------------------------------------------
       integer npx,npy,npz      ! processor decomp
       integer mx ,my ,mz       ! element decomp
 
+      real(8) :: mkrts = 0.0, mkrte = 0.0
+      integer(4) :: sscfake = 1
 
       call iniproc(mpi_comm_world)    ! has nekmpi common block
+      sscfake = SSC_MARK_STOP(nid)
       call init_delay
 
       call read_param(ifbrick,iel0,ielN,ielD,nx0,nxN,nxD,
@@ -56,7 +71,11 @@ c     SET UP and RUN NEKBONE
            call nekgsync()
 
            call set_timer_flop_cnt(0)
+           mkrts = MPI_WTIME()
+           sscfake = SSC_MARK_START(nid)
            call cg(x,f,g,c,r,w,p,z,n,niter,flop_cg)
+           sscfake = SSC_MARK_STOP(nid)
+           mkrte = mkrte + (MPI_WTIME() - mkrts)
            call set_timer_flop_cnt(1)
 
            call gs_free(gsh)
@@ -65,6 +84,8 @@ c     SET UP and RUN NEKBONE
            mfloplist(icount) = mflops*np
          enddo
       enddo
+      if(nid.eq.0) write(*,"(A,F10.6,A)")
+     &     "Walltime of the main kernel: ", mkrte, " sec"
 
       avmflop = 0.0
       do i = 1,icount
@@ -81,6 +102,9 @@ c     SET UP and RUN NEKBONE
 c     TEST BANDWIDTH BISECTION CAPACITY
 c     call xfer(np,cr_h)
 
+      sscfake = SSC_MARK_START(nid)
+      if(nid.eq.0) write(*,*) sscfake
+
       call exitt0
 
       end
diff --git a/src/makefile.template b/src/makefile.template
index c686e46..1f35706 100755
--- a/src/makefile.template
+++ b/src/makefile.template
@@ -21,13 +21,13 @@ USR_LFLAGS=
 
 ################################################################################
 
-lFLAGS = $(USR_LFLAGS)
+lFLAGS = $(USR_LFLAGS) -mkl -L${ADVISOR_2018_DIR}/lib64 -littnotify
 
 PPS_F = $(patsubst %,$(PPPO)-D%,$(PPS))
 PPS_C = $(patsubst %,-D%,$(PPS))
 
 #NEW #########################################################################
-BONE = cg.o driver.o math.o mxm_wrapper.o prox_dssum.o\
+BONE = cg.o driver.o ssc.o math.o mxm_wrapper.o prox_dssum.o\
 prox_setup.o semhat.o speclib.o 
 
 ifeq ($(IFNEKCOMM),true)
@@ -42,7 +42,7 @@ endif
 endif
 
 ifeq ($(IFMGRID),true)
-BONE += hsmg.o dsygv.o ssygv.o
+BONE += hsmg.o #dsygv.o ssygv.o
 else
 BONE += hsmg_dum.o
 endif
@@ -85,13 +85,13 @@ L3 = $(G) $(OPT_FLAGS_STD)
 L4 = $(L3)
 
 FL0   = $(L0) $(P) $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
-FL2i4 = $(L0)      $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
+FL2i4 = $(L0) -ipo -xHost      $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
 FL2   = $(L2) $(P) $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
 FL3   = $(L3) $(P) $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
 FL4   = $(L4) $(P) $(PPS_F) -I$(CASEDIR) -I$S -I$(OPT_INCDIR)
 
 cFL0   = $(L0) $(PPS_C) 
-cFL2   = $(L2) $(PPS_C) 
+cFL2   = $(L2) $(PPS_C) -I${ADVISOR_2018_DIR}/include
 cFL3   = $(L3) $(PPS_C) 
 cFL4   = $(L4) $(PPS_C) 
 ################################################################################
@@ -126,14 +126,15 @@ $(OBJDIR)/prox_dssum.o  :$S/prox_dssum.f;               $(F77) -c $(FL2) $< -o $
 $(OBJDIR)/prox_setup.o  :$S/prox_setup.f;               $(F77) -c $(FL4) $< -o $@
 $(OBJDIR)/hsmg.o        :$S/hsmg.f;                     $(F77) -c $(FL2) $< -o $@
 $(OBJDIR)/hsmg_dum.o    :$S/hsmg_dum.f;                 $(F77) -c $(FL2) $< -o $@
-$(OBJDIR)/ssygv.o       :$S/ssygv.f;                    $(F77) -c $(FL2i4) $< -o $@
-$(OBJDIR)/dsygv.o       :$S/dsygv.f;                    $(F77) -c $(FL2i4) $< -o $@
+#$(OBJDIR)/ssygv.o       :$S/ssygv.f;                    $(F77) -c $(FL2i4) $< -o $@
+#$(OBJDIR)/dsygv.o       :$S/dsygv.f;                    $(F77) -c $(FL2i4) $< -o $@
 $(OBJDIR)/driver.o      :$S/driver.f;                   $(F77) -c $(FL2) $< -o $@
+$(OBJDIR)/ssc.o         :$S/ssc.c;                      $(CC)  -c $(cFL2) $(JL) $< -o $@
 $(OBJDIR)/driver_comm.o	:$S/driver_comm.f;		$(F77) -c $(FL2) $< -o $@
 $(OBJDIR)/math.o	:$S/math.f;			$(F77) -c $(FL4) $< -o $@
 $(OBJDIR)/semhat.o	:$S/semhat.f;			$(F77) -c $(FL4) $< -o $@
 $(OBJDIR)/speclib.o	:$S/speclib.f;			$(F77) -c $(FL2) $< -o $@
-$(OBJDIR)/blas.o        :$S/blas.f; 		        $(F77) -c $(FL2i4) $< -o $@
+#$(OBJDIR)/blas.o        :$S/blas.f; 		        $(F77) -c $(FL2i4) $< -o $@
 $(OBJDIR)/comm_mpi.o	:$S/comm_mpi.f;			$(F77) -c $(FL2) $< -o $@
 $(OBJDIR)/mpi_dummy.o	:$S/mpi_dummy.f;		$(F77) -c $(FL2) $< -o $@
 $(OBJDIR)/delay.o	:$S/delay.f;			$(F77) -c $(FL2) $< -o $@
diff --git a/src/makenek.inc b/src/makenek.inc
index 659bffd..5340491 100755
--- a/src/makenek.inc
+++ b/src/makenek.inc
@@ -216,7 +216,7 @@ fi
 
 PPLIST="${PPLIST} GLOBAL_LONG_LONG"
 
-MXM_USER="mxm_std.o blas.o"
+MXM_USER="mxm_std.o" # blas.o"
 echo $PPLIST | grep 'BG' >/dev/null 
 if [ $? -eq 0 ]; then
    MXM_USER="mxm_std.o bg_aligned3.o bg_mxm44.o bg_mxm44_uneven.o bg_mxm3.o blas.o" 
diff --git a/src/ssc.c b/src/ssc.c
new file mode 100644
index 0000000..270463c
--- /dev/null
+++ b/src/ssc.c
@@ -0,0 +1,14 @@
+#include <ittnotify.h>
+#include <signal.h>
+#include <unistd.h>
+#define STARTSDE {if(!myid && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE {__SSC_MARK(0x222); __itt_pause(); if(!myid && getenv("PCMPID")) kill(atoi(getenv("PCMPID")), SIGUSR1);}
+
+int ssc_mark_start (int myid) {
+	STARTSDE;
+	return (myid << 0x1);
+}
+int ssc_mark_stop (int myid) {
+	STOPSDE;
+	return (myid >> 0x2);
+}
diff --git a/test/nek_mgrid/makenek b/test/nek_mgrid/makenek
index 00118aa..3d84375 100755
--- a/test/nek_mgrid/makenek
+++ b/test/nek_mgrid/makenek
@@ -35,7 +35,7 @@ PPLIST="MGRID"
 #G="-g"
 
 # optimization flags
-#OPT_FLAGS_STD=""
+OPT_FLAGS_STD="-ipo -xHost"
 #OPT_FLAGS_MAG=""
 
 ###############################################################################
-- 
1.8.3.1

