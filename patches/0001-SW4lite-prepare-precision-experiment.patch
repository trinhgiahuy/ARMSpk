From 6413a699dcc243f05c3024f63b4f90b90a0dc6b1 Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 15:54:32 +0900
Subject: [PATCH] SW4lite: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 Makefile    | 14 +++++++-------
 src/EW-dg.C | 12 ++++++++++++
 src/EW.C    |  9 +++++++++
 3 files changed, 28 insertions(+), 7 deletions(-)

diff --git a/Makefile b/Makefile
index 506c443..811f00b 100644
--- a/Makefile
+++ b/Makefile
@@ -70,14 +70,14 @@ else ifeq ($(findstring quadknl,$(HOSTNAME)),quadknl)
   FC = mpiifort
   CXX = mpiicpc
   CC = icc
-  OMPOPT = -qopenmp
-  MKL_PATH = /opt/intel/compilers_and_libraries_2017/linux/mkl/lib/intel64
-  OTHER_PATH = /opt/intel/compilers_and_libraries_2017/linux/lib/intel64
+  OMPOPT = -fopenmp
+  MKL_PATH = /opt/intel/compilers_and_libraries_2018.1.163/linux/mkl/lib/intel64
+  OTHER_PATH = /opt/intel/compilers_and_libraries_2018.1.163/linux/lib/intel64
   BASIC_PATH = /opt/intel/lib/intel64
-  EXTRA_CXX_FLAGS = -xmic-avx512
-  EXTRA_C_FLAGS = -xmic-avx512
-  EXTRA_FORT_FLAGS = -xmic-avx512 
-  EXTRA_LINK_FLAGS = -Wl,-rpath=${MKL_PATH} -Wl,-rpath=${BASIC_PATH} -L${MKL_PATH} -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm -ldl -Wl,-rpath=${OTHER_PATH} -L${OTHER_PATH} -lifcore -L${BASIC_PATH} -limf -lsvml -lintlc
+  EXTRA_CXX_FLAGS = -ipo -xHost -I${ADVISOR_2018_DIR}/include -xmic-avx512
+  EXTRA_C_FLAGS = -ipo -xHost -I${ADVISOR_2018_DIR}/include -xmic-avx512
+  EXTRA_FORT_FLAGS = -ipo -xHost -xmic-avx512
+  EXTRA_LINK_FLAGS = -Wl,-rpath=${MKL_PATH} -Wl,-rpath=${BASIC_PATH} -L${MKL_PATH} -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm -ldl -Wl,-rpath=${OTHER_PATH} -L${OTHER_PATH} -lifcore -L${BASIC_PATH} -limf -lsvml -lintlc -L${ADVISOR_2018_DIR}/lib64 -littnotify
 # for building testil
 #  EXTRA_LINK_FLAGS = -Wl,-rpath=${OTHER_PATH} -L${OTHER_PATH} -lifcore -L${BASIC_PATH} -limf -lsvml -lintlc -lm -ldl 
   openmp = yes
diff --git a/src/EW-dg.C b/src/EW-dg.C
index 643933c..1e78805 100644
--- a/src/EW-dg.C
+++ b/src/EW-dg.C
@@ -56,6 +56,12 @@
 
 #include "DG_FUNC.h"
 
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
+
 void EW::set_dg_orders( int qu, int qv)
 {
     m_qu = qu;
@@ -68,6 +74,9 @@ void EW::timeStepLoopdGalerkin()
 {
         // DG timestepping routine
    float_sw4 time_begin_solve = MPI_Wtime();
+double mkrts, mkrte; // my kernel run-time
+mkrts = MPI_Wtime();
+STARTSDE(1,m_myrank);
 #ifdef SW4_CROUTINES
    std::cout << "ERROR, DG requires compilation with fortran" << endl;
    exit(2);
@@ -441,6 +450,9 @@ void EW::timeStepLoopdGalerkin()
 
     if(m_myrank == 0){cout << "checking errors at final time: " << mTmax <<  endl;}
     computeError(udg,vdg,t);
+STOPSDE(1,m_myrank);
+mkrte = MPI_Wtime();
+if( m_myrank == 0 ) printf("Walltime of the main kernel: %.6lf sec\n", mkrte - mkrts);
     if( m_myrank == 0 ){
         float_sw4 time_end_solve = MPI_Wtime();
         cout << endl << "***** Solver execution time: " << time_end_solve - time_begin_solve <<
diff --git a/src/EW.C b/src/EW.C
index b66c849..3ef1fe1 100644
--- a/src/EW.C
+++ b/src/EW.C
@@ -61,6 +61,12 @@
 #include "F77_FUNC.h"
 #include "EWCuda.h"
 
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
+
 #ifndef SW4_CROUTINES
 extern "C" {
    void F77_FUNC(rhs4th3fortsgstr,RHS4TH3FORTSGSTR)( int*, int*, int*, int*, int*, int*, int*, int*, 
@@ -2345,6 +2351,7 @@ void EW::timesteploop( vector<Sarray>& U, vector<Sarray>& Um )
 
    // Do all timing in double, time differences have to much cancellation for float.
    double time_start_solve = MPI_Wtime();
+STARTSDE(1,m_myrank);
    bool saveerror = false;
 
    // Define local arrays
@@ -2772,7 +2779,9 @@ void EW::timesteploop( vector<Sarray>& U, vector<Sarray>& Um )
 	    trdata[s+12*(currentTimeStep-beginCycle)]= time_measure[s];
 
    } // end time stepping loop
+STOPSDE(1,m_myrank);
    double time_end_solve = MPI_Wtime();
+if (m_myrank == 0) printf("Walltime of the main kernel: %.6lf sec\n", time_end_solve - time_start_solve);
    print_execution_time( time_start_solve, time_end_solve, "solver phase" );
    if( m_output_detailed_timing )
       print_execution_times( time_sum );
-- 
1.8.3.1

