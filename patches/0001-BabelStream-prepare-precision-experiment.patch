From 44e8e846886f98539ab58feeee00e37db9bd0763 Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Tue, 15 May 2018 10:07:01 +0900
Subject: [PATCH 1/1] BabelStream: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 OpenMP.make |  4 ++--
 main.cpp    | 15 ++++++++++++++-
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/OpenMP.make b/OpenMP.make
index 18a71bf..6275f5d 100644
--- a/OpenMP.make
+++ b/OpenMP.make
@@ -29,7 +29,7 @@ COMPILER_XL = xlc++
 CXX = $(COMPILER_$(COMPILER))
 
 FLAGS_GNU = -O3 -std=c++11 -mcpu=native
-FLAGS_INTEL = -O3 -std=c++11 -xHOST -qopt-streaming-stores=always
+FLAGS_INTEL = -O3 -std=c++11 -xHOST -qopt-streaming-stores=always -I${ADVISOR_2018_DIR}/include
 FLAGS_CRAY = -O3 -hstd=c++11
 FLAGS_CLANG = -O3 -std=c++11
 FLAGS_XL = -O5 -qarch=pwr8 -qtune=pwr8 -std=c++11
@@ -37,7 +37,7 @@ CXXFLAGS = $(FLAGS_$(COMPILER))
 
 # OpenMP flags for CPUs
 OMP_GNU_CPU   = -fopenmp
-OMP_INTEL_CPU = -qopenmp
+OMP_INTEL_CPU = -qopenmp -L${ADVISOR_2018_DIR}/lib64 -littnotify
 OMP_CRAY_CPU  = -homp
 OMP_CLANG_CPU = -fopenmp=libomp
 OMP_XL_CPU = -qsmp=omp -qthreaded
diff --git a/main.cpp b/main.cpp
index 4fd5125..8d17dd5 100644
--- a/main.cpp
+++ b/main.cpp
@@ -39,6 +39,12 @@
 #include "OMPStream.h"
 #endif
 
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
+
 // Default size of 2^25
 unsigned int ARRAY_SIZE = 33554432;
 unsigned int num_times = 100;
@@ -61,6 +67,7 @@ void parseArguments(int argc, char *argv[]);
 
 int main(int argc, char *argv[])
 {
+STOPSDE(0,0);
 
   parseArguments(argc, argv);
 
@@ -88,6 +95,7 @@ int main(int argc, char *argv[])
       run<double>();
   }
 
+STARTSDE(0,0);
 }
 
 template <typename T>
@@ -168,8 +176,10 @@ void run()
   std::vector<std::vector<double>> timings(5);
 
   // Declare timers
-  std::chrono::high_resolution_clock::time_point t1, t2;
+  std::chrono::high_resolution_clock::time_point t1, t2, t3, t4;
 
+t3 = std::chrono::high_resolution_clock::now();
+STARTSDE(1,0);
   // Main loop
   for (unsigned int k = 0; k < num_times; k++)
   {
@@ -204,6 +214,9 @@ void run()
     timings[4].push_back(std::chrono::duration_cast<std::chrono::duration<double> >(t2 - t1).count());
 
   }
+STOPSDE(1,0);
+t4 = std::chrono::high_resolution_clock::now();
+printf("Walltime of the main kernel: %.6lf sec\n", std::chrono::duration_cast<std::chrono::duration<double> >(t4-t3).count());
 
   // Check solutions
   stream->read_arrays(a, b, c);
-- 
1.8.3.1

