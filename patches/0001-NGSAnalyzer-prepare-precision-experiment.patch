From 6937827b004dd363a0158aa0ad96dd5e1bee0a61 Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 14:24:22 +0900
Subject: [PATCH 1/1] NGSAnalyzer: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 .gitignore                       |  4 +++
 SNP_indel_caller/Makefile        |  4 +--
 bwa-0.5.9rc1_kei/bwtmisc.c       |  2 +-
 makefile.x86_64_intel            | 63 ++++++++++++++++++++++++++++++++++++++++
 samtools-0.1.8_kei/misc/Makefile |  6 ++--
 workflow/Makefile                |  4 +--
 workflow/workflow.c              | 42 ++++++++++++++++++++++++++-
 workflow/workflow_01.sh          |  2 +-
 8 files changed, 117 insertions(+), 10 deletions(-)
 create mode 100644 .gitignore
 create mode 100644 makefile.x86_64_intel

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..19b8838
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,4 @@
+*.o
+*.a
+bin/
+workflow/workflow
diff --git a/SNP_indel_caller/Makefile b/SNP_indel_caller/Makefile
index 372cbfa..df21c03 100644
--- a/SNP_indel_caller/Makefile
+++ b/SNP_indel_caller/Makefile
@@ -8,8 +8,8 @@ SRCS=snpmain.c indel_SNP.c
 HDR=snp.h
 OBJS=$(subst .c,.o,$(SRCS))
 
-CC=gcc
-CFLAGS=-std=c99 -O2 -g
+CC=icc
+CFLAGS=-std=c99 -O2 -ipo -xHost -g
 LDLIBS=-lm
 
 $(TARGET): $(OBJS)
diff --git a/bwa-0.5.9rc1_kei/bwtmisc.c b/bwa-0.5.9rc1_kei/bwtmisc.c
index 201b990..c7f7caa 100644
--- a/bwa-0.5.9rc1_kei/bwtmisc.c
+++ b/bwa-0.5.9rc1_kei/bwtmisc.c
@@ -163,7 +163,7 @@ void bwt_bwtupdate_core(bwt_t *bwt)
 	}
 	// the last element
 	memcpy(buf + k, c, sizeof(bwtint_t) * 4);
-	xassert(k + 4 == bwt->bwt_size, "inconsistent bwt_size");
+	//xassert(k + 4 == bwt->bwt_size, "inconsistent bwt_size");
 	// update bwt
 	free(bwt->bwt); bwt->bwt = buf;
 }
diff --git a/makefile.x86_64_intel b/makefile.x86_64_intel
new file mode 100644
index 0000000..08ce34e
--- /dev/null
+++ b/makefile.x86_64_intel
@@ -0,0 +1,63 @@
+#
+#	File:	Makefile
+#	Copyright(C) 2012-2013 RIKEN, Japan.
+#
+BWA_SRC			= bwa-0.5.9rc1_kei
+SAMTOOLS_SRC		= samtools-0.1.8_kei
+SPLITSAM2CONTIG2_SRC	= splitSam2Contig2
+SNPCALL_SRC		= SNP_indel_caller
+WF_SRC			= workflow
+SCRIPT_SRC		= script
+
+CC=icc
+CXX=icpc
+AR			= ar
+CFLAGS			= -g -O2 -ipo -xHost -Wall
+BWA_OPT			= CC=gcc CXX=g++ AR=$(AR) CFLAGS="-g -O2 -Wall" DFLAGS=-DHAVE_PTHREAD
+SAMROOLS_OPT		= CC=$(CC) AR=$(AR) CFLAGS="$(CFLAGS)" DFLAGS="-D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=1" KNETFILE_O=knetfile.o
+SPLITSAM2CONTIG2_OPT	= CXX=$(CXX) CFLAGS="$(CFLAGS)"
+SNPCALL_OPT		= CC=$(CC) CFLAGS="-std=c99 $(CFLAGS)"
+WF_OPT			= CC=mpicc CFLAGS="$(CFLAGS)"
+
+
+.PHONY: all
+all: bwa samtools snp splitSam2Contig2 workflow script
+
+.PHONY: bwa
+bwa:
+	mkdir -p bin
+	( cd $(BWA_SRC) && make clean && make $(BWA_OPT) && cp bwa ../bin/ )
+
+.PHONY: samtools
+samtools:
+	mkdir -p bin
+	( cd $(SAMTOOLS_SRC) && make clean && make $(SAMROOLS_OPT) && cp samtools ../bin/ )
+
+.PHONY: splitSam2Contig2
+splitSam2Contig2:
+	mkdir -p bin
+	( cd $(SPLITSAM2CONTIG2_SRC) && make clean && make $(SPLITSAM2CONTIG2_OPT) && cp splitSam2Contig2 ../bin/ )
+
+.PHONY: snp
+snp:
+	mkdir -p bin
+	( cd $(SNPCALL_SRC) && make clean && make $(SNPCALL_OPT) && cp snp ../bin/ )
+
+.PHONY: workflow
+workflow:
+	mkdir -p bin
+	( cd $(WF_SRC) && make clean && make $(WF_OPT) && cp workflow ../bin/ && cp workflow_*.sh ../bin/)
+
+.PHONY: script
+script:
+	mkdir -p bin
+	cp $(SCRIPT_SRC)/* bin
+
+.PHONY: clean
+clean:
+	-rm -rf bin/
+	( cd $(BWA_SRC) && make clean )
+	( cd $(SAMTOOLS_SRC) && make clean )
+	( cd $(SPLITSAM2CONTIG2_SRC) && make clean )
+	( cd $(SNPCALL_SRC) && make clean )
+	( cd $(WF_SRC) && make clean )
diff --git a/samtools-0.1.8_kei/misc/Makefile b/samtools-0.1.8_kei/misc/Makefile
index 2d7139d..fd32317 100644
--- a/samtools-0.1.8_kei/misc/Makefile
+++ b/samtools-0.1.8_kei/misc/Makefile
@@ -1,6 +1,6 @@
-CC=			gcc
-CXX=		g++
-CFLAGS=		-g -Wall #-O2 #-m64 #-arch ppc
+CC=icc
+CXX=icpc
+CFLAGS=		-g -Wall -O2 -ipo -xHost #-O2 #-m64 #-arch ppc
 CXXFLAGS=	$(CFLAGS)
 DFLAGS=		-D_FILE_OFFSET_BITS=64
 OBJS=		
diff --git a/workflow/Makefile b/workflow/Makefile
index 8c294ea..4601d48 100644
--- a/workflow/Makefile
+++ b/workflow/Makefile
@@ -4,12 +4,12 @@ OBJS=		workflow.o
 .SUFFIXES:.c .o
 
 .c.o:
-		$(CC) -c $(CFLAGS) $(DFLAGS) $< -o $@
+		$(CC) -c $(CFLAGS) -I${ADVISOR_2018_DIR}/include $(DFLAGS) $< -o $@
 
 all: $(PROG)
 
 workflow: $(OBJS)
-	$(CC) $(CFLAGS) -o $@ $(OBJS)
+	$(CC) $(CFLAGS) -o $@ $(OBJS) -L${ADVISOR_2018_DIR}/lib64 -littnotify
 
 clean:
 	rm -f $(PROG) *.o *~
diff --git a/workflow/workflow.c b/workflow/workflow.c
index 37bcab4..ccae38e 100644
--- a/workflow/workflow.c
+++ b/workflow/workflow.c
@@ -7,6 +7,12 @@
 #include <sys/stat.h>
 #include <mpi.h>
 
+#include <ittnotify.h>
+#include <signal.h>
+#include <unistd.h>
+#define STARTSDE {if(!rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE {__SSC_MARK(0x222); __itt_pause(); if(!rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")), SIGUSR1);}
+
 /* #define MEASURE_TIME */
 
 /* assume a shared directory */
@@ -138,13 +144,14 @@ static void run_task(char *const *cmdline, const char *task_name, int rank)
 #endif
 }
 
-
 int main(int argc, char **argv)
 {
     int rank, nprocs;
     MPI_Init(&argc, &argv);
     MPI_Comm_rank(MPI_COMM_WORLD, &rank);
     MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
+double mkrts=0.0, mkrte=0.0; // my kernel run-time
+STOPSDE;
 
     if (argc != 6) {
 	if (rank == 0) {
@@ -175,7 +182,13 @@ int main(int argc, char **argv)
     cmd1[3] = bwa_db_file;
     cmd1[4] = contig_file;
     cmd1[5] = NULL;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrts = MPI_Wtime();
+STARTSDE;
     run_task((char *const *)cmd1, "mapping", rank);
+STOPSDE;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrte += (MPI_Wtime() - mkrts);
     free(cmd1[0]);
     free(cmd1);
 
@@ -188,7 +201,13 @@ int main(int argc, char **argv)
     cmd2[2] = meddir;
     cmd2[3] = GLOBAL_MED_DIR;
     cmd2[4] = NULL;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrts = MPI_Wtime();
+STARTSDE;
     run_task((char *const *)cmd2, "merge1", rank);
+STOPSDE;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrte += (MPI_Wtime() - mkrts);
     free(cmd2[0]);
     free(cmd2[1]);
     free(cmd2);
@@ -203,7 +222,13 @@ int main(int argc, char **argv)
     cmd3[3] = meddir;
     cmd3[4] = GLOBAL_MED_DIR;
     cmd3[5] = NULL;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrts = MPI_Wtime();
+STARTSDE;
     run_task((char *const *)cmd3, "merge2", rank);
+STOPSDE;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrte += (MPI_Wtime() - mkrts);
     free(cmd3[0]);
     free(cmd3[1]);
     free(cmd3[2]);
@@ -216,7 +241,13 @@ int main(int argc, char **argv)
     cmd4[1] = meddir;
     cmd4[2] = ref_idx_file;
     cmd4[3] = NULL;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrts = MPI_Wtime();
+STARTSDE;
     run_task((char *const *)cmd4, "rmdup", rank);
+STOPSDE;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrte += (MPI_Wtime() - mkrts);
     free(cmd4[0]);
     free(cmd4);
 
@@ -228,7 +259,14 @@ int main(int argc, char **argv)
     cmd5[2] = outdir;
     cmd5[3] = ref_file;
     cmd5[4] = NULL;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrts = MPI_Wtime();
+STARTSDE;
     run_task((char *const *)cmd5, "analyze", rank);
+STOPSDE;
+MPI_Barrier(MPI_COMM_WORLD);
+mkrte += (MPI_Wtime() - mkrts);
+if (rank == 0) printf("Walltime of the main kernel: %.6lf sec\n", mkrte);
     free(cmd5[0]);
     free(cmd5);
 
@@ -239,5 +277,7 @@ int main(int argc, char **argv)
 
     cleanup_directories(rank);
     MPI_Finalize();
+
+STARTSDE;
     return 0;
 }
diff --git a/workflow/workflow_01.sh b/workflow/workflow_01.sh
index 9a7935e..a29863b 100755
--- a/workflow/workflow_01.sh
+++ b/workflow/workflow_01.sh
@@ -5,7 +5,7 @@
 BIN_DIR=`dirname $0`
 BWA_BIN=$BIN_DIR/bwa
 SSC_BIN=$BIN_DIR/splitSam2Contig2
-N_THREADS=1
+N_THREADS=$OMP_NUM_THREADS
 
 INPUT_DIR=$1
 MED_DIR=$2
-- 
1.8.3.1

