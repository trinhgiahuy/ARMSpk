From 226465c3321b3dba66345d6aee8af065dbdae29c Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 04:17:42 +0900
Subject: [PATCH 1/1] MVMC: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 .gitignore                 |  3 ++
 src/Makefile_intel         | 90 +++++++++++++++++++++++-----------------------
 src/pfapack/Makefile_intel |  2 +-
 src/sfmt/Makefile_intel    |  2 +-
 src/vmcmain.c              | 13 +++++++
 5 files changed, 63 insertions(+), 47 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..cf13c30
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,3 @@
+*.dat
+*.o
+*.a
diff --git a/src/Makefile_intel b/src/Makefile_intel
index 532e5e4..16f6e78 100644
--- a/src/Makefile_intel
+++ b/src/Makefile_intel
@@ -1,45 +1,45 @@
-FC = mpif90
-CC = mpicc
-
-# perhaps we can link MKL here
-#	MKL_DIR  = -L/usr/local/intel/composer_xe_2013/mkl/lib/intel64 \
-#	BLAS = -lmkl_intel_thread -lmkl_core -lmkl_avx -lmkl_intel_lp64
-#	LAPACK =
-#	SCALAPACK = -lmkl_intel_lp64 -lmkl_scalapack_lp64
-#	LIB = $(MKL_DIR) $(SCALAPACK) $(LAPACK) $(BLAS)
-
-MKL = -L/usr/local/intel/composer_xe_2013/mkl/lib/intel64 \
--Wl,--start-group \
--lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_scalapack_lp64 \
--lmkl_blacs_intelmpi_lp64 \
--Wl,--end-group \
--lpthread
-
-LIB = $(MKL) 
-
-CFLAGS = -xHost -O3 -openmp -opt-prefetch=3 -nofor-main
-#	REPORT = 
-#	REPORT = -vec-report -openmp-report
-REPORT = -vec-report 
-OPTION = -D_mpi_use
-
-OUT = vmc.out
-SRC = vmcmain.c
-PFAPACK = pfapack/libpfapack.a
-SFMT = sfmt/SFMT.o
-OBJS = vmcmain.o $(PFAPACK) $(SFMT)
-
-.PHONY : all pfapack sfmt
-all : vmc.out
-
-vmc.out : vmcmain.o pfapack sfmt
-	$(FC) -o $(OUT) $(OBJS) $(CFLAGS) $(LIB)
-
-vmcmain.o : *.c *.h
-	$(CC) -c $(SRC) $(OPTION) $(CFLAGS) $(REPORT)
-
-pfapack :
-	$(MAKE) -C pfapack -f Makefile_intel
-sfmt :
-	$(MAKE) -C sfmt -f Makefile_intel
-
+FC = mpif90
+CC = mpicc
+
+# perhaps we can link MKL here
+#	MKL_DIR  = -L/usr/local/intel/composer_xe_2013/mkl/lib/intel64 \
+#	BLAS = -lmkl_intel_thread -lmkl_core -lmkl_avx -lmkl_intel_lp64
+#	LAPACK =
+#	SCALAPACK = -lmkl_intel_lp64 -lmkl_scalapack_lp64
+#	LIB = $(MKL_DIR) $(SCALAPACK) $(LAPACK) $(BLAS)
+
+MKL = -L/usr/local/intel/composer_xe_2013/mkl/lib/intel64 \
+-Wl,--start-group \
+-lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lmkl_scalapack_lp64 \
+-lmkl_blacs_intelmpi_lp64 \
+-Wl,--end-group \
+-lpthread
+
+LIB = $(MKL) -L${ADVISOR_2018_DIR}/lib64 -littnotify
+
+CFLAGS = -O3 -ipo -xHost -fopenmp -qopt-prefetch=3 -nofor-main -I${ADVISOR_2018_DIR}/include
+#	REPORT =
+#	REPORT = -vec-report -openmp-report
+REPORT = -vec-report
+OPTION = -D_mpi_use
+
+OUT = vmc.out
+SRC = vmcmain.c
+PFAPACK = pfapack/libpfapack.a
+SFMT = sfmt/SFMT.o
+OBJS = vmcmain.o $(PFAPACK) $(SFMT)
+
+.PHONY : all pfapack sfmt
+all : vmc.out
+
+vmc.out : vmcmain.o pfapack sfmt
+	$(FC) -o $(OUT) $(OBJS) $(CFLAGS) $(LIB)
+
+vmcmain.o : *.c *.h
+	$(CC) -c $(SRC) $(OPTION) $(CFLAGS) $(REPORT)
+
+pfapack :
+	$(MAKE) -C pfapack -f Makefile_intel
+sfmt :
+	$(MAKE) -C sfmt -f Makefile_intel
+
diff --git a/src/pfapack/Makefile_intel b/src/pfapack/Makefile_intel
index 78266dd..52a5b13 100644
--- a/src/pfapack/Makefile_intel
+++ b/src/pfapack/Makefile_intel
@@ -18,7 +18,7 @@ OBJECTS = dlasktrd.o dlasktrf.o \
 	 dsktf2.o dsktrd.o dsktrf.o
 
 FORT = ifort
-FFLAGS = -O3 -implicitnone -xSSE2
+FFLAGS = -O3 -ipo -xHost -fopenmp -implicitnone
 
 all: $(OBJECTS)
 	$(AR) rvu libpfapack.a $(OBJECTS)
diff --git a/src/sfmt/Makefile_intel b/src/sfmt/Makefile_intel
index 5b78e62..2a57661 100644
--- a/src/sfmt/Makefile_intel
+++ b/src/sfmt/Makefile_intel
@@ -1,6 +1,6 @@
 OBJ = SFMT.o
 CC = icc
-CFLAGS = -O3 -no-ansi-alias -xSSE2
+CFLAGS = -O3 -ipo -xHost -fopenmp -no-ansi-alias
 OPTION = -DMEXP=19937 -DHAVE_SSE2
 
 $(OBJ): SFMT.c
diff --git a/src/vmcmain.c b/src/vmcmain.c
index 304da8b..45f13f1 100644
--- a/src/vmcmain.c
+++ b/src/vmcmain.c
@@ -7,6 +7,10 @@
 /* #include "fjcoll.h" */
 #include "vmcmain.h"
 
+#include <ittnotify.h>
+#define STARTSDE {__itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE {__itt_pause(); __SSC_MARK(0x222);}
+
 int VMCParaOpt(MPI_Comm comm_parent, MPI_Comm comm_child1, MPI_Comm comm_child2);
 int VMCPhysCal(MPI_Comm comm_parent, MPI_Comm comm_child1, MPI_Comm comm_child2);
 void outputData();
@@ -17,6 +21,9 @@ void initMultiDef(char *fileMultiDef, char *fileDefList, char *fileInitPara,
 /*main program*/
 int main(int argc, char* argv[])
 {
+double mkrts, mkrte; // my kernel run-time
+STOPSDE;
+
   /* input file name */
   char fileDefList[D_FileNameMax];
   char fileInitPara[D_FileNameMax];
@@ -104,6 +111,8 @@ int main(int argc, char* argv[])
 
   StopTimer(1);
 
+mkrts = MPI_Wtime();
+STARTSDE;
   if(NVMCCalMode==0) {
     StartTimer(2);
     /*-- VMC Parameter Optimization --*/
@@ -118,6 +127,9 @@ int main(int argc, char* argv[])
     info=1;
     if(rank0==0) fprintf(stderr,"error: NVMCCalMode must be 0 or 1.\n");
   }
+STOPSDE;
+mkrte = MPI_Wtime();
+if(rank0==0) printf("Walltime of the main kernel: %.6lf sec\n", mkrte - mkrts);
 
   StopTimer(0);
   if(rank0==0) {
@@ -135,6 +147,7 @@ int main(int argc, char* argv[])
   FreeMemoryDef();
   MPI_Finalize();
 
+STARTSDE;
   return info;
 }
 
-- 
1.8.3.1

