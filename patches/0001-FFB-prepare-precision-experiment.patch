From 84072d604b33943ddf24c7c80c4e052b85817d67 Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 02:38:26 +0900
Subject: [PATCH] FFB: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 .gitignore            |  2 ++
 src/Makefile          |  2 +-
 src/ffb_mini_main.F90 |  4 ++--
 src/les3x.F           | 34 ++++++++++++++++++++++++++++++----
 src/make_setting      |  5 +++--
 src/ssc.c             | 14 ++++++++++++++
 6 files changed, 52 insertions(+), 9 deletions(-)
 create mode 100644 src/ssc.c

diff --git a/.gitignore b/.gitignore
index 32dbb91..7b1856c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,6 +4,8 @@
 *.log
 *.a
 
+bin/
+
 src/param.h
 
 test/BOUN.*
diff --git a/src/Makefile b/src/Makefile
index 0f46f89..a5166c1 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -32,7 +32,7 @@ OBJS = \
   rfname.o sethex.o srfexx.o          subcnv.o \
            vel3d1.o vel3d2.o          \
   mfname.o \
-  miniapp_util.o
+  miniapp_util.o ssc.o
 
 ifeq (, $(findstring -DNO_METIS, $(FFLAGS)))
 OBJS += metis_wrapper.o
diff --git a/src/ffb_mini_main.F90 b/src/ffb_mini_main.F90
index 060f4d4..92812e4 100644
--- a/src/ffb_mini_main.F90
+++ b/src/ffb_mini_main.F90
@@ -1,7 +1,7 @@
 program ffb_mini
   use mpi
   use makemesh
-  implicit none
+
 
   integer :: ierr
   include 'param.h'
@@ -110,7 +110,7 @@ program ffb_mini
       write(*, '(/,a,/)') '... done'
   end if
 
-  call LES3X(file_parm)
+  call LES3X(file_parm, myrank)
 
 contains
 
diff --git a/src/les3x.F b/src/les3x.F
index bf9d6fa..80dd470 100644
--- a/src/les3x.F
+++ b/src/les3x.F
@@ -15,10 +15,27 @@ C THERMO-FLUID ANALYSIS SOLVERS FOR LARGE-SCALE-ASSEMBLY               C
 C                                                                      C
 C======================================================================C
 C*    PROGRAM LES3X
-      SUBROUTINE LES3X(FILEIN)
+      SUBROUTINE LES3X(FILEIN,myrank)
 #include "timing.h"
-      IMPLICIT NONE 
-C
+      use, intrinsic :: iso_c_binding
+      IMPLICIT NONE
+      interface
+      integer(C_INT) function SSC_MARK_START ( i,j ) bind ( c )
+      use, intrinsic :: iso_c_binding
+      integer(C_INT), value :: i,j
+      !!!DEC$ ATTRIBUTES C:: SSC_MARK_START
+      end function
+      integer(C_INT) function SSC_MARK_STOP ( i,j ) bind ( c )
+      use, intrinsic :: iso_c_binding
+      integer(C_INT),value :: i,j
+      !!!DEC$ ATTRIBUTES C:: SSC_MARK_STOP
+      end function
+      end interface
+C
+      include 'mpif.h'
+      real(8) :: mkrts, mkrte
+      integer(C_INT) :: sscfake = 1
+      INTEGER*4 myrank
       CHARACTER*(*) FILEIN
 C
       INTEGER*4 N0,N1,N2
@@ -1781,6 +1798,8 @@ C
       WRITE(IUT6,*) BLANK
       WRITE(IUT6,*) ' ** NOW ENTERING TIME MARCH LOOP **'
       TIME_START(TM_MAIN_LOOP)
+      mkrts = MPI_WTIME()
+      sscfake = SSC_MARK_START(1,myrank)
       DO 5000
 C     
           CALL DDSYNC
@@ -1924,6 +1943,13 @@ C
 C
  5000 CONTINUE
  5100 CONTINUE
+      sscfake = SSC_MARK_STOP(1,myrank)
+      mkrte = MPI_WTIME()
+      IF(myrank.EQ.0) THEN
+              write(*,"(A,F10.6,A)") "Walltime of the main kernel: ",
+     &                               mkrte - mkrts, " sec"
+              write(*,*) sscfake
+      ENDIF
       TIME_STOP(TM_MAIN_LOOP)
 C
       WRITE(IUT6,*) BLANK
@@ -2137,7 +2163,7 @@ C
 C
       IF(IPART.GE.2) CLOSE(IUT6)
       CALL DDEXIT
-C
+C 
 C
       STOP
 C
diff --git a/src/make_setting b/src/make_setting
index d329411..08f5fc2 100644
--- a/src/make_setting
+++ b/src/make_setting
@@ -7,8 +7,9 @@ DEFINE += -DNO_REFINER
 # timing option
 DEFINE += -DPROF_MAPROF
 
-CFLAGS += $(DEFINE) -O3 -xHost -mcmodel=large -shared-intel
-FFLAGS += $(DEFINE) -O3 -xHost -mcmodel=large -shared-intel
+CFLAGS += $(DEFINE) -O3 -ipo -xHost -mcmodel=large -shared-intel -I${ADVISOR_2018_DIR}/include
+FFLAGS += $(DEFINE) -O3 -ipo -xHost -mcmodel=large -shared-intel
+LIBS += -L${ADVISOR_2018_DIR}/lib64 -littnotify
 
 
 ifeq (, $(findstring -DNO_METIS, $(FFLAGS)))
diff --git a/src/ssc.c b/src/ssc.c
new file mode 100644
index 0000000..e91ddbc
--- /dev/null
+++ b/src/ssc.c
@@ -0,0 +1,14 @@
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
+
+int ssc_mark_start (int go, int rank) {
+	STARTSDE(go,rank);
+	return (rank << 0x1);
+}
+int ssc_mark_stop (int go, int rank) {
+	STOPSDE(go,rank);
+	return (rank >> 0x2);
+}
-- 
1.8.3.1

