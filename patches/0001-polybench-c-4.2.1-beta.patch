diff -Nur polybench.old/utilities/polybench.c polybench/utilities/polybench.c
--- polybench.old/utilities/polybench.c	2016-05-20 18:30:49.000000000 +0900
+++ polybench/utilities/polybench.c	2021-04-23 18:55:25.632136730 +0900
@@ -83,12 +83,9 @@
 double rtclock()
 {
 #if defined(POLYBENCH_TIME) || defined(POLYBENCH_GFLOPS)
-    struct timeval Tp;
-    int stat;
-    stat = gettimeofday (&Tp, NULL);
-    if (stat != 0)
-      printf ("Error return from gettimeofday: %d", stat);
-    return (Tp.tv_sec + Tp.tv_usec * 1.0e-6);
+    struct timespec mkrtsclock;
+    clock_gettime(CLOCK_MONOTONIC, &mkrtsclock);
+    return (mkrtsclock.tv_sec + mkrtsclock.tv_nsec * .000000001);
 #else
     return 0;
 #endif
@@ -365,6 +362,7 @@
 {
   polybench_prepare_instruments ();
 #ifndef POLYBENCH_CYCLE_ACCURATE_TIMER
+STARTSDE(1,0);
   polybench_t_start = rtclock ();
 #else
   polybench_c_start = rdtsc ();
@@ -376,6 +374,7 @@
 {
 #ifndef POLYBENCH_CYCLE_ACCURATE_TIMER
   polybench_t_end = rtclock ();
+STOPSDE(1,0);
 #else
   polybench_c_end = rdtsc ();
 #endif
@@ -399,7 +398,7 @@
 		 (double)(polybench_t_end - polybench_t_start)) / 1000000000);
 #else
 # ifndef POLYBENCH_CYCLE_ACCURATE_TIMER
-      printf ("%0.6f\n", polybench_t_end - polybench_t_start);
+      printf ("Walltime of the main kernel: %0.15lf sec\n", polybench_t_end - polybench_t_start);
 # else
       printf ("%Ld\n", polybench_c_end - polybench_c_start);
 # endif
diff -Nur polybench.old/utilities/polybench.h polybench/utilities/polybench.h
--- polybench.old/utilities/polybench.h	2016-05-20 18:30:49.000000000 +0900
+++ polybench/utilities/polybench.h	2021-04-23 18:51:45.796047743 +0900
@@ -217,6 +217,11 @@
 extern void polybench_timer_stop();
 extern void polybench_timer_print();
 # endif
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
 
 /* PAPI support. */
 # ifdef POLYBENCH_PAPI
