From 67d074eeee4af8fd0c06fcda0926cdcfcad060fc Mon Sep 17 00:00:00 2001
From: Jens Domke <domke.j.aa@m.titech.ac.jp>
Date: Fri, 23 Feb 2018 16:08:51 +0900
Subject: [PATCH 1/1] XSBench: prepare precision experiment

Signed-off-by: Jens Domke <domke.j.aa@m.titech.ac.jp>
---
 .gitignore   |  2 ++
 src/Main.c   | 19 ++++++++++++++++++-
 src/Makefile | 10 +++++-----
 3 files changed, 25 insertions(+), 6 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..4e66ee9
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+*.o
+src/XSBench
diff --git a/src/Main.c b/src/Main.c
index acd2e71..6465899 100644
--- a/src/Main.c
+++ b/src/Main.c
@@ -4,6 +4,12 @@
 #include<mpi.h>
 #endif
 
+#include <ittnotify.h>
+#include <signal.h>
+#include <stdlib.h>
+#define STARTSDE(go,rank) {if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1); __itt_resume(); __SSC_MARK(0x111);}
+#define STOPSDE(go,rank) {__SSC_MARK(0x222); __itt_pause(); if(go && 0==rank && getenv("PCMPID")) kill(atoi(getenv("PCMPID")),SIGUSR1);}
+
 int main( int argc, char* argv[] )
 {
 	// =====================================================================
@@ -24,7 +30,9 @@ int main( int argc, char* argv[] )
 	MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
 	MPI_Comm_rank(MPI_COMM_WORLD, &mype);
 	#endif
-	
+double mkrts, mkrte; // my kernel run-time
+STOPSDE(0,mype);
+
 	// rand() is only used in the serial initialization stages.
 	// A custom RNG is used in parallel portions.
 	#ifdef VERIFICATION
@@ -114,6 +122,7 @@ int main( int argc, char* argv[] )
 	if( mype == 0 ) printf("Dumping data to binary file...\n");
 	binary_dump(in.n_isotopes, in.n_gridpoints, nuclide_grids, energy_grid, in.grid_type);
 	if( mype == 0 ) printf("Binary file \"XS_data.dat\" written! Exiting...\n");
+STARTSDE;
 	return 0;
 	#endif
 
@@ -147,6 +156,9 @@ int main( int argc, char* argv[] )
 	}
 	#endif	
 
+mkrts = MPI_Wtime();
+STARTSDE(1,mype);
+
 	// OpenMP compiler directives - declaring variables as shared or private
 	#pragma omp parallel default(none) \
 	private(i, thread, p_energy, mat, seed) \
@@ -244,6 +256,10 @@ int main( int argc, char* argv[] )
 
 	}
 
+STOPSDE(1,mype);
+mkrte = MPI_Wtime();
+if(mype == 0) printf("\nWalltime of the main kernel: %.6lf sec\n", mkrte - mkrts);
+
 	#ifndef PAPI
 	if( mype == 0)	
 	{	
@@ -265,5 +281,6 @@ int main( int argc, char* argv[] )
 	MPI_Finalize();
 	#endif
 
+STARTSDE(0,mype);
 	return 0;
 }
diff --git a/src/Makefile b/src/Makefile
index 0eb9b1c..4233fa1 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -2,11 +2,11 @@
 # User Options
 #===============================================================================
 
-COMPILER    = gnu
+COMPILER    = intel
 OPTIMIZE    = yes
 DEBUG       = no
 PROFILE     = no
-MPI         = no
+MPI         = yes
 PAPI        = no
 VEC_INFO    = no
 VERIFY      = no
@@ -35,10 +35,10 @@ obj = $(source:.c=.o)
 #===============================================================================
 
 # Standard Flags
-CFLAGS := -std=gnu99
+CFLAGS := -std=gnu99 -I${ADVISOR_2018_DIR}/include
 
 # Linker Flags
-LDFLAGS = -lm
+LDFLAGS = -lm -L${ADVISOR_2018_DIR}/lib64 -littnotify
 
 # Regular gcc Compiler
 ifeq ($(COMPILER),gnu)
@@ -49,7 +49,7 @@ endif
 # Intel Compiler
 ifeq ($(COMPILER),intel)
   CC = icc
-  CFLAGS += -openmp 
+  CFLAGS += -ipo -xHost -fopenmp
 endif
 
 # BG/Q gcc Cross-Compiler
-- 
1.8.3.1

